Python 3.9.1 (tags/v3.9.1:1e5d33e, Dec  7 2020, 17:08:21) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> a=6
>>> print(a)
6
>>> a
6
>>> a=100
>>> b=0b1100100
>>> c=0o144
>>> d=0x64
>>> print(a,b,c,d)
100 100 100 100
>>> type(a),type(b),type(c),type(d)
(<class 'int'>, <class 'int'>, <class 'int'>, <class 'int'>)
>>> print(2**2048)
32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230656
>>> #상수 범위에 제한이 없어서 이만큼이나 출력된다.
>>> a=100.0
>>> b=0.1e3
>>> c=1000E-2
>>> print(a,b,c)
100.0 100.0 10.0
>>> type(a)
<class 'float'>
>>> type(b),type(c)
(<class 'float'>, <class 'float'>)
>>> #모듈에서 제일 큰 실수의 값을 알아보자
>>> import sys
>>> sys.float_info.max
1.7976931348623157e+308
>>> #모듈에서 제일 작은 값
>>> sys.float_info.min
2.2250738585072014e-308
>>> a=3-2j
>>> type(a)
<class 'complex'>
>>> #a는 복소수이다.
>>> print(a.real)
3.0
>>> #print(a.real)a의 실수부를 알려달라
>>> print(a.imag)
-2.0
>>> #print(a.imag)a의 허수부를 알려달라
>>> print(a.conjugate())
(3+2j)
>>> #print(a.conjugate())a의 켤레복소수를 알려달라
>>> 